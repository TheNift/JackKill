{"version":3,"sources":["style.scss","node_modules/bootstrap/scss/mixins/_breakpoints.scss"],"names":[],"mappings":"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","file":"style.css","sourcesContent":["@import './node_modules/bootstrap/scss/functions';\n@import './node_modules/bootstrap/scss/variables';\n@import './node_modules/bootstrap/scss/mixins';\n\n$background-color: #bab5a1;\n$darker: #1d1d1d;\n$yorha-white: #d1cdb7;\n$yorha-text:\t#454138;\n\n* {\n\tfont-family: 'Inconsolata', monospace;\n}\n\nbody {\n\tmargin: 0;\n\tbackground: $background-color;\n\t// overflow: hidden;\n    // @include media-breakpoint-down(sm) {\n    //     overflow:visible;\n    // }\n\theight: 100vh;\n}\n\nbody::-webkit-scrollbar{\n    display: none;\n}\n\nh1 {\n\tcolor: $yorha-text;\n\ttop: 20px;\n\t// left: 50%;\n\tposition: absolute;\n\tdisplay: flex;\n\t// transform: translateX(-50%) translateY(-50%) scale(2, 2);\n\ttransform: scale(1.5,1.5);\n\ttransition: 0.5s ease-in-out;\n}\n\n// h1.top {\n// \ttransform: scale(1,1);\n// }\n\n#main {\n\topacity: 0;\n\ttransition: 0.5s;\n\tcolor: $yorha-text;\n\tmargin-top: 60px;\n}\n\nh2 {\n\ttext-align: center;\n\tmargin: 0;\n\tcursor: default;\n}\n\n.info-button {\n\tdisplay: inline-block;\n\tcolor: $yorha-text;\n\tcursor: pointer;\n\t// -webkit-touch-callout: none; /* iOS Safari */\n    // -webkit-user-select: none; /* Safari */\n    //  -khtml-user-select: none; /* Konqueror HTML */\n    //    -moz-user-select: none; /* Old versions of Firefox */\n    //     -ms-user-select: none; /* Internet Explorer/Edge */\n            user-select: none; /* Non-prefixed version, currently\n                                  supported by Chrome, Edge, Opera and Firefox */\n}\n\n.underline {\n\tdisplay: block;\n\theight: 2px;\n\tmargin: 0 auto;\n\twidth: 0;\n\ttransition: width .25s linear;\n}\n\n*:hover>.underline, .active>.underline {\n\twidth: 100%;\n}\n\nline {\n\tstroke-width: 5px;\n\tstroke-dasharray: 100px;\n\tstroke-dashoffset: 100px;\n\tstroke-linecap: round;\n}\n\n.info-panel {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\ttransition: opacity 0.2s linear;\n\tposition: absolute;\n\ttransform: translateX(-150%);\n\topacity: 0;\n\twidth: 90%;\n\tpointer-events: none;\n}\n\n.info-panel.shown {\n\topacity: 1;\n\tvisibility: visible;\n\ttransform: translateX(0%);\n}\n\n.info-block-container {\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: space-around;\n\t// align-items: center;\n\tflex-wrap: wrap;\n\t@include media-breakpoint-only(xxl) {\n        max-width: 80%;\n    }\n    // @include media-breakpoint-down(sm md lg) {\n    //     max-width: none;\n    // }\n}\n\n.info-block {\n\tdisplay: flex;\n\t// outline: 1px solid pink;\n\tjustify-content: center;\n\talign-items: center;\n\tmax-width: 60%;\n\t// flex-grow: 1;\n\tmargin-bottom: 16px;\n\t// background: $darker;\n\tborder: 3px solid $yorha-text;\n\tborder-radius: 25px;\n\tpadding: 4px 16px;\n}\n\n.info-block-skills {\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tflex-direction: row;\n\tjustify-content: space-between;\n\talign-items: flex-start;\n}\n\n.info-desc {\n    display: block;\n\tmargin: 10px auto;\n    @include media-breakpoint-down(lg md) {\n        font-size: 24px !important;\n    }\n    @include media-breakpoint-down(sm) {\n        font-size: 18px !important;\n    }\n}\n\n.wide {\n\t// min-width: 60%;\n\t@include media-breakpoint-up(lg) {\n\t\twidth: 50%;\n\t\tmargin: 0% 20%;\n\t\tmargin-bottom: 16px;\n\t}\n}\n\n.limited {\n\t@include media-breakpoint-up(lg) {\n\t\twidth: 45%;\n\t}\n\t@include media-breakpoint-down(sm md) {\n\t\tmargin: none;\n\t\twidth: 60%;\n\t} \n}\n\n.flex {\n\tdisplay: flex;\n}\n\na {\n\tcolor: inherit;\n\tdisplay: inline-block;\n}\n\na.d {\n\ttext-decoration: none;\n}\n\n#aboutme>.info-desc>span {\n\tcolor: #90c53f;\n}\n\ncanvas {\n\tleft: 50%;\n\tposition: absolute;\n\ttransform: translateX(-50%);\n}\n\nimg {\n\tborder-radius: 4px;\n\twidth: 15%;\n\theight: 15%;\n}\n\n.col-container {\n\tdisplay: flex;\n    flex-wrap: wrap;\n    margin-top: 20px;\n\t// width: 90%;\n    @include media-breakpoint-down(lg) {\n        flex-direction: column;\n        justify-content: center;\n    }\n    @include media-breakpoint-down(sm md) {\n        flex-direction: row;\n        justify-content: space-around;\n        // align-items: center;\n    }\n\n    .col {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\t// background: $darker;\n\t\tborder: 3px solid $yorha-text;\n\t\tmargin: 0px 8px 8px 16px;\n\t\tborder-radius: 25px;\n\t\tpadding: 4px 16px;\n        .project-image {\n            width:256px;\n        }\n    }\n}\n\n.flex-container {\n\tdisplay: flex;\n\tjustify-content: center;\n    align-items: center;\n\tflex: 1;\n}\n\n.main-content-container {\n\tdisplay: flex;\n\tjustify-content: center;\n}\n\n.button-container-desktop {\n\tdisplay: flex;\n\tjustify-content: center;\n    margin: 20px 0px;\n\tpointer-events: none;\n\t@include media-breakpoint-down(sm) {\n        display: none;\n    }\n    @include media-breakpoint-down(lg md) {\n        display: flex;\n    }\n}\n\n.button-container-mobile {\n\tdisplay: flex;\n    flex-direction: column;\n\tjustify-content: center;\n    align-items: center;\n    margin: 20px 0px;\n\t@include media-breakpoint-down(lg md) {\n        display: none;\n    }\n    @include media-breakpoint-down(sm) {\n        display: flex;\n    }\n}\n\n.self1 {\n    margin: 20px 20px;\n    @include media-breakpoint-down(md) {\n        width:60%;\n    }\n    @include media-breakpoint-down(md) {\n        width:40%;\n    }\n    @include media-breakpoint-down(sm) {\n        width:80%;\n    }\n}\n\n@media only screen and (max-width: 600px) {\n\t.col {\n\t\tdisplay: block;\n\t\twidth: 90%;\n\t}\n}\n\n.title-card {\n\tdisplay: flex;\n\tflex: 1;\n\tz-index: 9999999;\n}\n\n.resumesection {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tmargin-top: 30px;\n\tmax-width: 80%;\n\t@include media-breakpoint-up(lg) {\n\t\tmax-width: 50%;\n\t}\n}\n\n.resumetitlebox {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 0;\n\tfont-size: 30px;\n\tfont-weight: bold;\n\tborder-bottom: 3px solid currentColor;\n\tline-height: 0.85;\n\tborder-radius: 0px;\n\ttext-shadow:\n    2px 2px $yorha-white,\n    2px -2px $yorha-white,\n    -2px 2px $yorha-white,\n    -2px -2px $yorha-white;\n}\n\n.resumeblockcontainer {\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: space-around;\n\tflex-wrap: wrap;\n\tmargin-top: 16px;\n\n}\n\n.nohighlight {\n\t-webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n     -khtml-user-select: none; /* Konqueror HTML */\n       -moz-user-select: none; /* Old versions of Firefox */\n        -ms-user-select: none; /* Internet Explorer/Edge */\n            user-select: none; /* Non-prefixed version, currently\n                                  supported by Chrome, Edge, Opera and Firefox */\n}\n\n.clickable {\n\tpointer-events: auto !important;\n}\n\n.resumeblock {\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: flex-start;\n\t// background: $darker;\n\tborder: 3px solid $yorha-text;\n\tmargin: 0px 8px 8px 16px;\n\tborder-radius: 25px;\n\tpadding: 4px 16px;\n\t@include media-breakpoint-down(sm md) {\n        max-width: 100%;\n    }\n\t@include media-breakpoint-up(lg xl xxl) {\n        max-width: 80%;\n\n    }\n}\n\n.course {\n\t@include media-breakpoint-up(lg) {\n\t\twidth: 20%;\n\t\tmargin-left: 8px;\n\t\tmargin-right: 8px;\n\t\tmargin-bottom: 8px;\n\n\t// @include media-breakpoint-down(sm md) {\n\t// \twidth: 100%;\n\t// }\n}\n\t}\n\n.company {\n\tfont-size: 24px;\n\tfont-weight: bold;\n\tcolor: $yorha-text;\n}\n\n.position {\n\tfont-size: 20px;\n\tcolor: $yorha-text;\n}\n\n.details {\n\tfont-size: 16px;\n\tcolor: $yorha-text;\n}\n\n.centered {\n\tleft: 50%;\n\tposition: absolute;\n\ttop: 50%;\n\ttransform: translate(-50%, -50%);\n}\n\n.aggressive-width {\n\tmin-width: 51%;\n\t@include media-breakpoint-up(md xl) {\n        flex: 1;\n    }\n}\n\n#tiles {\n\theight: calc(200vh - 1px);\n\twidth: calc(100vw - 1px);\n\t// position: relative;\n\tz-index: 2;\n\n\tdisplay: grid;\n\tgrid-template-columns: repeat(var(--columns), 1fr);\n\tgrid-template-rows: repeat(var(--rows), 1fr);\n}\n\nbody.toggled {\n\tanimation: none;\n}\n\nbody.toggled > #title {\n\topacity: 0;\n}\n\nbody.toggled > #icon {\n\topacity: 1;\n}\n\nbody.toggled > #tiles > .tile:hover {\n\topacity: 0.1 !important;\n}\n\n.tile {\n\tcursor: pointer;\n\tposition: relative;\n\t// border: 1px solid pink;\n}\n\n// .tile:hover:before {\n// \tbackground-color: rgb(30, 30, 30);\n// }\n\n.tile:before {\n\tbackground-color: $yorha-white;\n\tcontent: \"\";\n\tinset: 0.5px;\n\tposition: absolute;\n}\n\n.content {\n\tz-index: 3;\n\tposition: relative;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: flex-start;\n}\n\n.link {\n\tpointer-events: all;\n\ttransition: 0.2s;\n\ttext-decoration: none;\n}\n\n.link:hover {\n\tbackground-color: $darker;\n}\n\n.linkbox {\n\tdisplay: flex;\n\tflex: 1;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\ttext-decoration: none !important;\n}","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl xxl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n"]}